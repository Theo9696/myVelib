package myVelib;

import java.util.ArrayList;

public class ShortestPath implements RidePreferences {

	@Override
	public PlanningRide compute(ArrayList<Station> stations, User user, double[] destination) {
		
		try {
			//We take one possible value for the distance if there is at least one station
			double distance = Math.pow(user.getUserLat()-stations.get(0).getStationLat(),2) + Math.pow(user.getUserLong()-stations.get(0).getStationLong(),2) ;
			Station depart;
			Station arrivee;
			for (Station s1 : stations) {
				for (Station s2 : stations) {
					
					if (!s1.equals(s2)) {
						double distanceNew = Math.sqrt(Math.pow(user.getUserLat()-s1.getStationLat(),2)
								+ Math.pow(user.getUserLong()-s1.getStationLong(),2)) +
								Math.sqrt(Math.pow(s1.getStationLat()-s2.getStationLat(),2) +
								Math.pow(s1.getStationLong()-s2.getStationLong(),2))+
								Math.sqrt(Math.sqrt(Math.pow(user.getUserLat()-s2.getStationLat(),2)
										+ Math.pow(user.getUserLong()-s2.getStationLong(),2));
								
					}
				}
				
			}
		}
		catch (NullPointerException e) {
			System.out.println(e);
		}
		
	}
	
	

}
